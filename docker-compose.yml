version: '3.9'

networks:
  default:
    external: true
    name: ${DOCKER_NETWORK}
  intnet:
    external: true
    name: ${INT_NETWORK}

services:

#
# === Nginx ===
#        
  nginx:
    # Alpine Linux - nginx for prometheus monitoring
    image: nginx:alpine
    container_name: "${APP_HOST}-${APP_ID}-nginx"
    hostname: "nginx.${APP_HOST}.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    networks:
      - intnet
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      # The first mount add bash and ping to nginx:alpine:
      - ./conf/nginx/add.sh:/docker-entrypoint.d/05-add-packages.sh:ro
      - ./application/html:/var/www/html
      - ./conf/nginx/default-http.conf:/etc/nginx/conf.d/default.conf:ro
      - ./logs/nginx:/var/log/nginx
    healthcheck:
      test: "curl -s -I http://nginx.${APP_HOST}.${INT_NETWORK}:80/favicon.ico | grep -q 'HTTP/1.1 200'"
      interval: 10s
      timeout: 2s
      retries: 50

#
# === Nginx Prometheus Exporter ===
#        
  nginx-exporter:
    depends_on:
      nginx:
        condition: service_healthy
    # https://stackoverflow.com/questions/64952485/nginx-prometheus-exporter-container-cannot-connect-to-nginx
    image: nginx/nginx-prometheus-exporter
    container_name: "${APP_HOST}-${APP_ID}-nginx-exporter"
    hostname: "nginx-exporter.${APP_HOST}.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    networks:
      - intnet
    ports:
      - "${NGINX_EXPORTER_PORT}:9113"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      - -nginx.scrape-uri=http://host.docker.internal:${NGINX_PORT}/nginx_status

#
# === Apache httpd ===
#        
  httpd:
    image: httpd:2.4-alpine
    container_name: "${APP_HOST}-${APP_ID}-httpd"
    hostname: "httpd.${APP_HOST}.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    networks:
      - intnet
    ports:
      - "${HTTPD_PORT}:80"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./conf/httpd:/usr/local/apache2/conf:ro
    healthcheck:
      test: "date | grep 'UTC'"
      interval: 10s
      timeout: 2s
      retries: 50

#
# === Apache httpd Prometheus Exporter ===
#        
  httpd-exporter:
    depends_on:
      httpd:
        condition: service_healthy
    image: lusotycoon/apache-exporter
    container_name: "${APP_HOST}-${APP_ID}-httpd-exporter"
    hostname: "httpd-exporter.${APP_HOST}.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    privileged: true
    ports:
      - "${HTTPD_EXPORTER_PORT}:9117"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    entrypoint: /bin/apache_exporter --scrape_uri="http://host.docker.internal:${HTTPD_PORT}/server-status?auto"

#
# === Prometheus ===
#        
  prometheus:
    depends_on:
      nginx:
        condition: service_healthy
    depends_on:
      httpd:
        condition: service_healthy
    # prometheus server
    image: docker.io/bitnami/prometheus:${PROMETHEUS_VERSION}
    container_name: "${APP_HOST}-${APP_ID}-prometheus"
    hostname: "${APP_HOST}.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    networks:
      - intnet
    ports:
      - "${MONITOR_PORT}:9090"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./conf/prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml
      - ./data/prometheus:/opt/bitnami/prometheus/data:rw

#
# === Grafana ===
#        
  grafana:
    depends_on:
      nginx:
        condition: service_healthy
    depends_on:
      httpd:
        condition: service_healthy
    image: docker.io/bitnami/grafana:${GRAFANA_VERSION}
    container_name: "${APP_HOST}-${APP_ID}-grafana"
    hostname: "grafana.${APP_HOST}.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    networks:
      - intnet
    ports:
      - "${GRAFANA_PORT}:3000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      GRAFANA_PORT: "${GRAFANA_PORT}"
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./conf/grafana/grafana.ini:/opt/bitnami/grafana/conf/grafana.ini
      - ./conf/grafana/default.ini:/opt/bitnami/grafana/conf/defaults.ini
      - ./data/grafana:/opt/bitnami/grafana/data:rw
